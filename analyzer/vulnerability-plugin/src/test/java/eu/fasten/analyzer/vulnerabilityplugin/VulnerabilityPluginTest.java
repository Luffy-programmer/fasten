/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.analyzer.vulnerabilityplugin;

import org.junit.Before;
import org.junit.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class VulnerabilityPluginTest {

    private VulnerabilityPlugin.VulnerabilityProducer vulnerabilityProducer;

    @Before
    public void setUp() {
        vulnerabilityProducer = new VulnerabilityPlugin.VulnerabilityProducer();
    }

    @Test
    public void nameTest() {
        var name = "Vulnerability Plugin";
        assertEquals(name, vulnerabilityProducer.name());
    }

    @Test
    public void checkDescription() {
        var description = "Vulnerability plugin. "
                + "Downloads CVE entries from the NVD Database, enriches"
                + " them with method-level details and publishes to Kafka topic";
        assertEquals(description, vulnerabilityProducer.description());
    }

//    @Test
//    public void sendToKafkaTest() {
//        KafkaProducer<Object, String> mockProducer = Mockito.mock(KafkaProducer.class);
//        vulnerabilityProducer.setKafkaProducer(mockProducer);
//        when(mockProducer.send(any(ProducerRecord.class), any(Callback.class))).thenReturn(null);
//    }

}
