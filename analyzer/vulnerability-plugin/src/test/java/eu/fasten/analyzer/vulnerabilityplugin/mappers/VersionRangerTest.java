/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.analyzer.vulnerabilityplugin.mappers;

import eu.fasten.analyzer.vulnerabilityplugin.utils.connections.JavaHttpClient;
import eu.fasten.analyzer.vulnerabilityplugin.utils.mappers.VersionRanger;
import org.junit.Test;

import static org.junit.Assert.assertTrue;

public class VersionRangerTest {

    @Test
    public void testWriteAndReadFromFile() {
        String path = "./src/test/resources/test_versions.json";

        VersionRanger vr1 = new VersionRanger(new JavaHttpClient(), path);
        vr1.getVersions("/maven/org.apache.kafka/kafka");
        vr1.getVersions("/pypi/django");

        vr1.writeVersions(path);

        VersionRanger vr2 = new VersionRanger(new JavaHttpClient(), path);
        assertTrue(vr2.versionsMappings.get("/pypi/django").size() > 0);
        assertTrue(vr2.versionsMappings.get("/maven/org.apache.kafka/kafka").size() > 0);
    }
}
