/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.analyzer.vulnerabilityplugin;

import eu.fasten.analyzer.vulnerabilityplugin.utils.Vulnerability;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class VulnerabilityTest {
    Vulnerability v = new Vulnerability("CVE-TEST");

    @Test
    public void testGetId() {
        assertEquals("CVE-TEST", v.getId());
    }

    @Test
    public void testGetCVSS2() {
        v.setScoreCVSS2(1.0);
        assertEquals(new Double(1.0), v.getScoreCVSS2());
    }

    @Test
    public void testGetCVSS3() {
        v.setScoreCVSS3(1.0);
        assertEquals(new Double(1.0), v.getScoreCVSS3());
    }

    @Test
    public void testGetDescription() {
        v.setDescription("test");
        assertEquals("test", v.getDescription());
    }

    @Test
    public void testGetExploits() {
        v.addExploit("exploit");
        assertTrue(v.getExploits().contains("exploit"));
    }

    @Test
    public void testGetPatches() {
        v.addPatch("patch");
        assertTrue(v.getPatches().contains("patch"));
    }

    @Test
    public void testGetDaysToFix() {
        v.setDaysToFix(1L);
        assertEquals(new Long(1L), v.getDaysToFix());
    }

    @Test
    public void testGetDate() {
        v.setLastModifiedDate("test-date");
        assertEquals("test-date", v.getLastModifiedDate());
    }
}
