package eu.fasten.analyzer.vulnerabilityplugin.utils;

import com.mongodb.MongoClient;
import com.mongodb.MongoCredential;
import com.mongodb.ServerAddress;
import com.mongodb.client.MongoDatabase;

import java.util.Arrays;


public class MongoConnector {

    /**
     * Helper class to wrap the Mongo Context to connect to.
     */
    public static class MongoContext {
        String username;
        String dbAuth;
        String pass;
        String dbName;

        public MongoContext(String username, String dbAuth, String pass, String dbName) {
            this.username = username;
            this.dbAuth = dbAuth;
            this.pass = pass;
            this.dbName = dbName;
        }
    }

    /**
     * Connects to instance of GHTorrent running on monster.
     * @param context - includes the information to instantiate a connection.
     * @return MongoDatabase object, ready to use to connect to collections
     */
    public static MongoDatabase getMongoCollection(MongoContext context) {
        String user = context.username; // the user name
        String database = context.dbAuth; // the name of the database in which the user is defined
        char[] password = context.pass.toCharArray(); // the password as a character array
        MongoCredential credential = MongoCredential.createCredential(user, database, password);
        // Connects by default to localhost - port 27017
        MongoClient mongoClient = new MongoClient(new ServerAddress("127.0.0.1", 27017),
                Arrays.asList(credential));
        // Connects to database
        MongoDatabase db = mongoClient.getDatabase(context.dbName);
        return db;
    }
}
