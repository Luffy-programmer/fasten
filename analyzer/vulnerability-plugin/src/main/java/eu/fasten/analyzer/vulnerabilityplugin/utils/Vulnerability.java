/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.analyzer.vulnerabilityplugin.utils;

import com.google.gson.Gson;
import eu.fasten.analyzer.vulnerabilityplugin.utils.mappers.Severity;

import java.util.*;

public class Vulnerability {

    public static class Cpe23Uri {
        private String vendor;
        private String product;
        private String version;

        /**
         * Class to encapsulate CPE23URIs.
         *
         * @param vendor  - maps with NVD
         * @param product - maps with NVD
         * @param version - maps with NVD
         */
        public Cpe23Uri(String vendor, String product, String version) {
            this.vendor = vendor;
            this.product = product;
            this.version = version;
        }

        public String getVendor() {
            return vendor;
        }

        public void setVendor(String vendor) {
            this.vendor = vendor;
        }

        public String getProduct() {
            return product;
        }

        public void setProduct(String product) {
            this.product = product;
        }

        public String getVersion() {
            return version;
        }

        public void setVersion(String version) {
            this.version = version;
        }

        @Override
        public String toString() {
            return "Cpe23Uri{"
                    + "vendor='" + vendor + '\''
                    + ", product='" + product + '\''
                    + ", version='" + version + '\''
                    + '}';
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) {
                return true;
            }
            if (o == null || getClass() != o.getClass()) {
                return false;
            }
            Cpe23Uri cpe23Uri = (Cpe23Uri) o;
            return Objects.equals(vendor, cpe23Uri.vendor)
                    && Objects.equals(product, cpe23Uri.product)
                    && Objects.equals(version, cpe23Uri.version);
        }
    }

    public static class Hunk {
        private int lineNumber;
        private String date;

        public Hunk(int lineNumber, String date) {
            this.lineNumber = lineNumber;
            this.date = date;
        }
    }

    public static class File {
        private String fileName;
        private List<Hunk> hunks;
        private String patchDate;

        /**
         * File class constructor.
         *
         * @param fileName  - of the file that was changed
         * @param hunks     - see Hunk class for more details
         * @param patchDate - date when the file was modified
         */
        public File(String fileName, List<Hunk> hunks, String patchDate) {
            this.fileName = fileName;
            this.hunks = hunks;
            this.patchDate = patchDate;
        }

        public String getFileName() {
            return fileName;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            File file = (File) o;
            return Objects.equals(fileName, file.fileName) &&
                    Objects.equals(hunks, file.hunks) &&
                    Objects.equals(patchDate, file.patchDate);
        }
    }

    private String id;

    private HashSet<Cpe23Uri> cpe23Uris;
    private HashSet<String> purls;
    private Double scoreCVSS2;
    private Double scoreCVSS3;
    private Severity severity;
    private List<Integer> cweIds;

    private String publishedDate;
    private String lastModifiedDate;

    private String description;
    private HashSet<String> references;
    private HashSet<String> patches;
    private HashSet<String> exploits;
    private HashSet<File> vulnerableFiles;
    private Long daysToFix;

    /**
     * Constructor for a Vulnerability Object.
     * @param id - takes a String ID
     */
    public Vulnerability(String id) {
        this.id = id;
        this.cpe23Uris = new HashSet<>();
        this.purls = new HashSet<>();
        this.references = new HashSet<>();
        this.vulnerableFiles = new HashSet<>();
        this.patches = new HashSet<>();
        this.exploits = new HashSet<>();
        this.cweIds = new ArrayList<>();
    }

    public String getId() {
        return id;
    }

    public HashSet<Cpe23Uri> getCpe23Uris() {
        return cpe23Uris;
    }

    public void addCpeUri(Cpe23Uri cpe) {
        this.cpe23Uris.add(cpe);
    }

    public Double getScoreCVSS2() {
        return scoreCVSS2;
    }

    public void setScoreCVSS2(Double scoreCVSS2) {
        this.scoreCVSS2 = scoreCVSS2;
    }

    public Double getScoreCVSS3() {
        return scoreCVSS3;
    }

    public void setScoreCVSS3(Double scoreCVSS3) {
        this.scoreCVSS3 = scoreCVSS3;
    }

    public String getPublishedDate() {
        return publishedDate;
    }

    public void setPublishedDate(String publishedDate) {
        this.publishedDate = publishedDate;
    }

    public String getLastModifiedDate() {
        return lastModifiedDate;
    }

    public void setLastModifiedDate(String lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public HashSet<String> getReferences() {
        return this.references;
    }

    public void addReference(String url) {
        this.references.add(url);
    }

    public HashSet<File> getVulnerableFiles() {
        return vulnerableFiles;
    }

    public void addExploit(String url) {
        this.exploits.add(url);
    }

    public HashSet<String> getExploits() {
        return exploits;
    }

    public void addPatch(String url) {
        this.patches.add(url);
    }

    public HashSet<String> getPatches() {
        return patches;
    }

    public void addPurl(String purl) {
        this.purls.add(purl);
    }

    public HashSet<String> getPurls() {
        return purls;
    }

    public void addCweId(Integer id) {
        this.cweIds.add(id);
    }

    public void addVulnerableFile(File vulnerable_file) {
        this.vulnerableFiles.add(vulnerable_file);
    }

    public Long getDaysToFix() {
        return daysToFix;
    }

    public void setDaysToFix(Long daysToFix) {
        this.daysToFix = daysToFix;
    }

    public Severity getSeverity() {
        return severity;
    }

    public void setSeverity(Severity severity) {
        this.severity = severity;
    }

    @Override
    public String toString() {
        return "Vulnerability{" +
                "id='" + id + '\'' +
                ", cpe23Uris=" + cpe23Uris +
                ", purls=" + purls +
                ", scoreCVSS2=" + scoreCVSS2 +
                ", scoreCVSS3=" + scoreCVSS3 +
                ", severity=" + severity +
                ", cweIds=" + cweIds +
                ", publishedDate='" + publishedDate + '\'' +
                ", lastModifiedDate='" + lastModifiedDate + '\'' +
                ", description='" + description + '\'' +
                ", references=" + references +
                ", patches=" + patches +
                ", exploits=" + exploits +
                ", vulnerableFiles=" + vulnerableFiles +
                ", daysToFix=" + daysToFix +
                '}';
    }

    /**
     * JSON Representation of the Vulnerability using GSON.
     *
     * @return String JSON
     */
    public String toJson() {
        Gson gson = new Gson();
        return gson.toJson(this);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Vulnerability that = (Vulnerability) o;
        return id.equals(that.id) &&
                Objects.equals(cpe23Uris, that.cpe23Uris) &&
                Objects.equals(scoreCVSS2, that.scoreCVSS2) &&
                Objects.equals(scoreCVSS3, that.scoreCVSS3) &&
                Objects.equals(publishedDate, that.publishedDate) &&
                Objects.equals(lastModifiedDate, that.lastModifiedDate) &&
                Objects.equals(description, that.description) &&
                Objects.equals(references, that.references) &&
                Objects.equals(patches, that.patches) &&
                Objects.equals(exploits, that.exploits) &&
                Objects.equals(vulnerableFiles, that.vulnerableFiles) &&
                Objects.equals(daysToFix, that.daysToFix);
    }

    /**
     * Merges the vulnerability object with another one
     * @param v2 - vulnerability to merge with
     */
    public void merge(Vulnerability v2) {
        assert this.getId().equals(v2.getId());
        this.getPurls().addAll(v2.getPurls());
        this.getCpe23Uris().addAll(v2.getCpe23Uris());
        this.getReferences().addAll(v2.getReferences());
        this.getPatches().addAll(v2.getPatches());
        this.getExploits().addAll(v2.getExploits());
        this.getVulnerableFiles().addAll(v2.getVulnerableFiles());
        if (v2.description != null && this.description != null) {
            if (v2.getDescription().length() > this.getDescription().length()) {
                this.setDescription(v2.getDescription());
            }
        }
        // Severity
        if (this.severity == null) {
            if (v2.severity != null) {
                this.setSeverity(v2.severity);
            }
        }
        // Score CVSS2
        if (this.scoreCVSS2 == null) {
            if (v2.scoreCVSS2 != null) {
                this.setScoreCVSS2(v2.scoreCVSS2);
            }
        }
        // Score CVSS3
        if (this.scoreCVSS3 == null) {
            if (v2.scoreCVSS3 != null) {
                this.setScoreCVSS3(v2.scoreCVSS3);
            }
        }
        // Published Date
        if (this.publishedDate == null) {
            if (v2.publishedDate != null) {
                this.setPublishedDate(v2.publishedDate);
            }
        }
        // Last Modified Date
        if (this.lastModifiedDate == null) {
            if (v2.lastModifiedDate != null) {
                this.setLastModifiedDate(v2.lastModifiedDate);
            }
        }
        // Days to fix
        if (this.daysToFix == null) {
            if (v2.daysToFix != null) {
                this.setDaysToFix(v2.daysToFix);
            }
        }
    }
}


