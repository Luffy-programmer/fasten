/*
 * This file is generated by jOOQ.
 */
package eu.fasten.analyzer.metadataplugin.db.codegen.tables.records;


import eu.fasten.analyzer.metadataplugin.db.codegen.tables.Dependencies;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DependenciesRecord extends TableRecordImpl<DependenciesRecord> implements Record3<Long, Long, String[]> {

    private static final long serialVersionUID = -200271834;

    /**
     * Setter for <code>public.dependencies.package_id</code>.
     */
    public void setPackageId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dependencies.package_id</code>.
     */
    public Long getPackageId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.dependencies.dependency_id</code>.
     */
    public void setDependencyId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dependencies.dependency_id</code>.
     */
    public Long getDependencyId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.dependencies.version_range</code>.
     */
    public void setVersionRange(String... value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dependencies.version_range</code>.
     */
    public String[] getVersionRange() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Dependencies.DEPENDENCIES.PACKAGE_ID;
    }

    @Override
    public Field<Long> field2() {
        return Dependencies.DEPENDENCIES.DEPENDENCY_ID;
    }

    @Override
    public Field<String[]> field3() {
        return Dependencies.DEPENDENCIES.VERSION_RANGE;
    }

    @Override
    public Long component1() {
        return getPackageId();
    }

    @Override
    public Long component2() {
        return getDependencyId();
    }

    @Override
    public String[] component3() {
        return getVersionRange();
    }

    @Override
    public Long value1() {
        return getPackageId();
    }

    @Override
    public Long value2() {
        return getDependencyId();
    }

    @Override
    public String[] value3() {
        return getVersionRange();
    }

    @Override
    public DependenciesRecord value1(Long value) {
        setPackageId(value);
        return this;
    }

    @Override
    public DependenciesRecord value2(Long value) {
        setDependencyId(value);
        return this;
    }

    @Override
    public DependenciesRecord value3(String... value) {
        setVersionRange(value);
        return this;
    }

    @Override
    public DependenciesRecord values(Long value1, Long value2, String[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DependenciesRecord
     */
    public DependenciesRecord() {
        super(Dependencies.DEPENDENCIES);
    }

    /**
     * Create a detached, initialised DependenciesRecord
     */
    public DependenciesRecord(Long packageId, Long dependencyId, String[] versionRange) {
        super(Dependencies.DEPENDENCIES);

        set(0, packageId);
        set(1, dependencyId);
        set(2, versionRange);
    }
}
