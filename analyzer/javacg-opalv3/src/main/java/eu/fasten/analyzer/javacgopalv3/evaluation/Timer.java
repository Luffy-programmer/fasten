package eu.fasten.analyzer.javacgopalv3.evaluation;

import java.util.HashMap;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Timer {

    private static final Logger logger = LoggerFactory.getLogger(Timer.class);

    private final Map<String, Integer> coordRepetition;
    private final Map<String, Double> perRevisionTime;
    private final Map<String, Double> opalTime;
    private final Map<String, Map<String, Double>> mergeTime;

    public Timer() {
        coordRepetition = new HashMap<>();
        perRevisionTime = new HashMap<>();
        opalTime = new HashMap<>();
        mergeTime = new HashMap<>();
    }

    public void addNewIsolatedRevision(String coord, Double time){
        coordRepetition.put(coord,1);
        perRevisionTime.put(coord, time);
    }

    public void addExistingIsolatedRevision(String coord){
        final var oldNumber = coordRepetition.getOrDefault(coord, 0);
        if (oldNumber == 0) {
            logger.warn("Coordinate didn't exist {}", coord);
        }
        coordRepetition.put(coord, oldNumber + 1);
    }

    public void addOPAL(String coord, Double time){
        if (opalTime.containsKey(coord)) {
            logger.warn("The coordinate was already generated by OPAL {}", coord);
        }
        opalTime.put(coord, time);
    }


}
